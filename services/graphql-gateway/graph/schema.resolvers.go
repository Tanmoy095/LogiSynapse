package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.76

import (
	"context"

	"github.com/Tanmoy095/LogiSynapse/graphql-gateway/graph/generated"
	"github.com/Tanmoy095/LogiSynapse/graphql-gateway/graph/model"
)

// Now implement Query resolver methods on queryResolver
func (r *queryResolver) Shipments(ctx context.Context) ([]*model.Shipment, error) {
	return []*model.Shipment{
		{
			ID:          "1",
			Status:      "In Transit",
			Origin:      "Dhaka",
			Destination: "Berlin",
			Eta:         "2025-07-15",
		},
		{
			ID:          "2",
			Status:      "Delivered",
			Origin:      "Chittagong",
			Destination: "Munich",
			Eta:         "2025-07-10",
		},
	}, nil
}

// Health is the resolver for the health field.
func (r *queryResolver) Health(ctx context.Context) (string, error) {
	return "GraphQL Gateway OK", nil
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
